{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","googleAuthProvider","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","getDocs","query","collection","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSavenote","getState","auth","url","noteToFirestore","noteRef","doc","updateDoc","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","console","log","login","displayName","catch","e","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","today","moment","format","useDispatch","active","useSelector","state","className","style","display","onChange","files","includes","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","icon","document","querySelector","onClick","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","alt","src","deleteDoc","NothingSelected","JournalEntry","date","noteDate","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","addDoc","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","AppRouter","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","setTimeout","exact","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.be4a3eaa.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC88nVwvOnUpHuFvCSHYNu3Yqdgk_OsRRM\",\r\n    authDomain: \"sql-demo-ae1d6.firebaseapp.com\",\r\n    projectId: \"sql-demo-ae1d6\",\r\n    storageBucket: \"sql-demo-ae1d6.appspot.com\",\r\n    messagingSenderId: \"744521824679\",\r\n    appId: \"1:744521824679:web:7a75f39fcd1a2246671e82\",\r\n    measurementId: \"G-Q1W9W63E2K\"\r\n  };\r\n  \r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nconst db = getFirestore();\r\n \r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n \r\nexport{\r\n    analytics,\r\n    db,\r\n    googleAuthProvider\r\n}\r\n ","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout', \r\n\r\n    uiSetError:'[UI] Set error',\r\n    uiRemoveError:'[UI] Remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes]  New note',\r\n    notesActive: '[Notes]  Set active note',\r\n    notesLoad: '[Notes]  Load notes',\r\n    notesUpdated: '[Notes]  Updated note saved',\r\n    notesFileUrl: '[Notes]  Updated image url',\r\n    notesDelete: '[Notes]  Delete note',\r\n    notesLogoutCleaning: '[Notes]  Logout Cleaning',\r\n}","import { types } from \"../types/types\"\r\n\r\n\r\nexport const setError = (err) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoading\r\n    }\r\n}\r\n\r\nexport const logOut = () => {\r\n    return {\r\n        type: types.logout\r\n    }\r\n}","\r\n\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https:////api.cloudinary.com/v1_1/yomismo123dg/upload';\r\n\r\n    const formData = new FormData ();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file)\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json()\r\n            return cloudResp.secure_url\r\n        } else {\r\n            throw await resp.json()\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n\r\n    //return url de la imagen\r\n}","import { collection, query, getDocs } from \"@firebase/firestore\";\r\nimport { db } from \"../firebase/firebase-config\";\r\n \r\nexport const loadNotes = async (uid) => {\r\n \r\n    const notesSnap = await getDocs(query(collection(db, `${ uid }/journal/notes`)));\r\n    const notes = [];\r\n \r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n      });\r\n    return notes;\r\n};","import { addDoc, collection, doc, updateDoc, deleteDoc } from \"@firebase/firestore\"\r\nimport Swal from \"sweetalert2\"\r\nimport { db } from \"../firebase/firebase-config\"\r\nimport { fileUpload } from \"../helpers/fileUpload\"\r\nimport { loadNotes } from \"../helpers/loadNotes\"\r\nimport { types } from '../types/types'\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await addDoc(collection(db, `${uid}`, \"journal/notes\"), newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote))\r\n        dispatch( addNewNote (doc.id, newNote))\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNotes(notes))\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSavenote = (note) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid\r\n\r\n        if (!note.url) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note }\r\n        delete noteToFirestore.id\r\n        const noteRef = doc(db, `${uid}/journal/notes/${note.id}`)\r\n        await updateDoc(noteRef, noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, note))\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, note\r\n    }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active: activeNote } = getState().notes\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file)\r\n        activeNote.url = fileUrl\r\n\r\n        dispatch(startSavenote(activeNote))\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        Swal.fire({\r\n            title: 'Deleting...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n        const uid = getState().auth.uid\r\n        const noteRef = doc(db, `${uid}/journal/notes/${id}`)\r\n        await deleteDoc(noteRef);\r\n\r\n        dispatch( deleteNote(id) );\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const notesLogoutCleaning = () => ({\r\n    type: types.notesLogoutCleaning\r\n})\r\n","import Swal from 'sweetalert2'\r\nimport { getAuth, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { googleAuthProvider } from '../firebase/firebase-config'\r\nimport { startLoading, finishLoading } from './ui';\r\nimport { types } from \"../types/types\";\r\nimport { notesLogoutCleaning } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading())\r\n        const auth = getAuth()\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(({ user }) => {\r\n                console.log(user);\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading())\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading())\r\n                if (e.message === \"Firebase: Error (auth/user-not-found).\") {\r\n                    Swal.fire('Error', 'Invalid email, try again', 'error')\r\n                } else {\r\n                    Swal.fire('Error', 'Wrong email/password, try again', 'error')\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        const auth = getAuth()\r\n        createUserWithEmailAndPassword(auth, email, password, name)\r\n            .then(async ({ user }) => {\r\n                await updateProfile(user, { displayName: name })\r\n                dispatch(login(user.uid, user.displayName))\r\n\r\n            }).catch(e => {\r\n                console.log(e);\r\n                Swal.fire( 'Error', e.message, 'error')\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogOut = () => {\r\n    return async (dispatch) => {\r\n        const auth = getAuth()\r\n        await signOut(auth)\r\n\r\n        dispatch(logout)\r\n        dispatch(notesLogoutCleaning())\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.logout\r\n\r\n    }\r\n}","import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues(newFormState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset];\r\n}","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport { startSavenote, startUploading } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const today = moment().format(\"Do MMM YY\")\r\n\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n\r\n        dispatch(startSavenote(active))\r\n    }\r\n\r\n    const handleClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n\r\n        if (file) {\r\n            if (file.type.includes('image')) {\r\n                dispatch(startUploading(file))\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Subir solo imagenes'\r\n                })\r\n            }\r\n        }\r\n        document.querySelector('#fileSelector').value = '';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='container-fluid'>\r\n\r\n\r\n            <div className='row  notes__appbar'>\r\n\r\n                <div className='col-md-6 col-sm-12 text-start'>\r\n\r\n                    <div>\r\n                        <span>{today}</span>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className='col-md-6 col-sm-12 text-end'>\r\n\r\n                    <input\r\n                        id=\"fileSelector\"\r\n                        type=\"file\"\r\n                        name=\"file\"\r\n                        style={{ display: \"none\" }}\r\n                        onChange={handleFileChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <button className=\"btn\"\r\n                            onClick={handleClick}\r\n                        >\r\n                            Picture\r\n                        </button>\r\n                        <button onClick={handleSave} className=\"btn\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { active: note } = useSelector(state => state.notes)\r\n    const [formValues, handleInputChange, reset] = useForm(note)\r\n    const { body, title } = formValues\r\n\r\n    const activeId = useRef( note.id )\r\n\r\n    useEffect(() => {\r\n        if( note.id !== activeId.current) {\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch( activeNote( formValues.id, {...formValues}) )\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( activeId.current ) );\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"notes__main-content animate__animated animate__fadeIn animate__slower\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name='title'\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <textarea\r\n                    placeholder=\"Write about today!\"\r\n                    className=\"notes__textarea\"\r\n                    name='body'\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n                </textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            alt=\"img4\"\r\n                            src={note.url}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n                <button \r\n                    className='btn btn-danger'\r\n                    onClick={handleDelete}\r\n                >\r\n                    Delete\r\n                </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { activeNote } from '../../actions/notes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const noteDate = moment(date)\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote( id, {date, title, body, url}) )\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleEntryClick} className=\"journal__entry pointer animate__animated animate__backInLeft\">\r\n\r\n            {\r\n                url && <div\r\n                    className=\"journal__entry-picture\"\r\n\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')} / {noteDate.format('MMM')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const notes = useSelector(state => state.notes.notes)\r\n\r\n    return (\r\n        <div className=\"jornal__entries\">\r\n            \r\n        {\r\n            notes.map( note => {\r\n               return <JournalEntry key ={note.id} id={note.id} {...note}/>\r\n            })\r\n        }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogOut } from '../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const name = useSelector(state => state.auth.name)\r\n\r\n    const deslog = () => {\r\n        dispatch(startLogOut())\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() )\r\n    }\r\n    \r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button onClick={deslog} className=\"btn\">\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n\r\n            <Sidebar />\r\n            <main>\r\n\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const loading = useSelector(state => state.ui.loading)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch ( startGoogleLogin())\r\n    }\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { email, password } = formValues\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(startLoginEmailPassword( email, password))\r\n    }\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={handleSubmit}\r\n                className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"none\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social network</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/register\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    // const { msgError } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n    const { name, email, password, password2 } = formValues\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (isFormValid()) {\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name))\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('name required'))\r\n            Swal.fire('error', 'Name required', 'error')\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('email is required'))\r\n            Swal.fire('error', 'Email is required', 'error')\r\n        } else if (password !== password2 || password.length <= 6) {\r\n            dispatch(setError(\"Password should match and have more than 6 characters\"))\r\n            Swal.fire('error', 'Password should match and have more than 6 characters', 'error')\r\n            return false\r\n        }\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={handleRegister}\r\n                className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n\r\n                {/* {\r\n                    msgError &&\r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>)\r\n                } */}\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                    autoComplete=\"none\"\r\n                    className=\"auth__input\"\r\n                />\r\n\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                    autoComplete=\"none\"\r\n                    className=\"auth__input\"\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                    className=\"auth__input\"\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                    className=\"auth__input\"\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/login\"\r\n                >\r\n                    Already registered? Log in\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n\r\n                    <Route path=\"/auth/login\" component={LoginScreen} />\r\n\r\n                    <Route path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { getAuth, onAuthStateChanged } from '@firebase/auth';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { login } from '../actions/auth';\r\nimport { startLoadingNotes } from '../actions/notes';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        const auth = getAuth()\r\n        onAuthStateChanged(auth, async (user) => {\r\n\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true)\r\n\r\n                dispatch(startLoadingNotes(user.uid))\r\n\r\n            } else {\r\n                setIsLoggedIn(false)\r\n            }\r\n            setTimeout(() => {\r\n                setChecking(false)\r\n            }, 2000);\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    {\r\n                        isLoggedIn ?\r\n                            (\r\n                                <>\r\n                                    < Route exact path=\"/\" component={JournalScreen} />\r\n                                    <Redirect to=\"/\"/>\r\n\r\n                                </>\r\n                            )\r\n                            :\r\n                            (\r\n                                <>\r\n                                    <Route path=\"/auth\" component={AuthRouter} />\r\n                                    <Redirect to=\"/auth/login\" />\r\n                                </>\r\n                            )\r\n\r\n\r\n                    }\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n/*\r\n{\r\n    notes: [],\r\n    active: null OR { id:'123123rsads' , title: '', body: '', img: '', date: 1523541 }\r\n}\r\n*/\r\nconst initialState= {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk'\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\n//Create reducers acepta sola una funcion, por lo que me creo un OBJETO que COMBINA los reducers,\r\n//entonces si quiero agregar mas reducers, simplemente los agrego al objeto\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\n// composeWithDevTools()","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider  store={store}>\r\n            \r\n                <AppRouter />\r\n\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}